<?php
 namespace Mgt\Varnish\Console\Command; use Symfony\Component\Console\Command\Command; use Symfony\Component\Console\Input\InputInterface; use Symfony\Component\Console\Output\OutputInterface; use Symfony\Component\Filesystem\Filesystem; use Symfony\Component\Process\Process; class CacheWarmerCommand extends Command { const USER_AGENT = "\115\147\164\x56\141\x72\x6e\151\163\x68\103\x72\141\x77\154\x65\162"; const CACHE_WARMER_CACHE_KEY = "\115\x67\x74\x43\141\143\x68\x65\x57\x61\x72\155\x65\162"; const CACHE_WARMER_CRAWLED_URLS = "\x4d\147\164\103\x61\143\150\x65\127\141\x72\155\x65\162\x43\162\x61\x77\x6c\145\144\125\x72\x6c\163"; protected $curlAdapter; protected $logger; protected $directoryList; protected $storeManager; protected $cache; protected $cachePurger; protected $lockFile; protected $isLocked; protected $varnishConfig; protected $urlResource; protected $urlQueueResource; protected $urlQueueCollection; public function __construct(\Magento\Framework\HTTP\Adapter\Curl $curlAdapter, \Psr\Log\LoggerInterface $logger, \Magento\Framework\App\Filesystem\DirectoryList $directoryList, \Magento\Store\Model\StoreManagerInterface $storeManager, \Mgt\Varnish\Model\Cache\Backend\File $cache, \Magento\CacheInvalidate\Model\PurgeCache $cachePurger, \Mgt\Varnish\Model\Cache\Config $varnishConfig, \Mgt\Varnish\Model\ResourceModel\Url $urlResource, \Mgt\Varnish\Model\ResourceModel\UrlQueue $urlQueueResource, \Mgt\Varnish\Model\ResourceModel\UrlQueue\Collection $urlQueueCollection) { goto d1f4d; Aab08: $this->cache = $cache; goto F97cd; d1f4d: $this->curlAdapter = $curlAdapter; goto D4932; dae2c: $this->urlResource = $urlResource; goto Ee623; F97cd: $this->cachePurger = $cachePurger; goto B10e8; Ccbfa: parent::__construct(); goto Cd30e; B814c: $this->directoryList = $directoryList; goto f2af6; B10e8: $this->varnishConfig = $varnishConfig; goto dae2c; Ee623: $this->urlQueueResource = $urlQueueResource; goto b47a4; f2af6: $this->storeManager = $storeManager; goto Aab08; b47a4: $this->urlQueueCollection = $urlQueueCollection; goto Ccbfa; D4932: $this->logger = $logger; goto B814c; Cd30e: } protected function configure() { goto c76a1; D5548: parent::configure(); goto aad5b; c76a1: $this->setName("\x6d\x67\x74\x2d\x76\x61\162\x6e\x69\x73\x68\x3a\143\x61\x63\150\x65\55\167\x61\x72\x6d\x65\162"); goto De8c7; De8c7: $this->setDescription("\115\107\x54\40\126\x61\162\x6e\151\x73\x68\x20\103\x61\143\150\145\40\127\141\162\x6d\x65\162"); goto D5548; aad5b: } protected function execute(InputInterface $input, OutputInterface $output) { try { goto ee521; A1a77: goto fad09; goto D71d5; ee521: ini_set("\155\145\x6d\x6f\x72\171\x5f\x6c\x69\x6d\x69\x74", "\x32\x30\64\70\115"); goto ce195; A886c: $isCacheWarmerCpuLimitEnabled = $this->varnishConfig->isCacheWarmerCpuLimitEnabled(); goto Bc517; E10b0: if (count($this->urlQueueCollection)) { goto E2a7c; } goto b78d6; D71d5: De1f9: goto E1de1; b87c1: foreach ($this->urlQueueCollection as $urlQueue) { try { goto C605c; Bdc83: $url = sprintf("\x25\163\x2f\45\x73", rtrim($store->getBaseUrl(), "\57"), ltrim($urlQueue->getPath(), "\x2f")); goto Cf1c7; Cf1c7: $urls[$urlQueue->getId()] = $url; goto e3ac0; dbf1b: $store = $this->storeManager->getStore($storeId); goto Bdc83; C605c: $storeId = $urlQueue->getStoreId(); goto dbf1b; e3ac0: } catch (\Exception $e) { } c359a: } goto Df222; ffcc0: Edae8: goto B19a2; Ff35e: $urls = []; goto b87c1; D5df3: $this->crawlUrls($urls, $output); goto e24f0; cca69: $this->urlQueueCollection->setPageSize($numberOfThreads); goto b4f85; A38f4: Be71e: goto A78d9; D551f: if ($break == false) { goto f5990; } goto A38f4; cf258: $i = 0; goto f391d; D2ddd: $cacheWarmerCpuLimit = $this->varnishConfig->getCacheWarmerCpuLimit(); goto b63ba; Fd617: $numberOfProcessingUnits = $this->runCommand("\x6e\160\162\157\x63"); goto B1055; c1777: $output->writeln(sprintf("\x43\165\x72\162\145\156\x74\x6c\171\40\164\150\x65\x20\x43\120\125\40\154\151\x6d\x69\164\x20\x68\141\163\40\142\x65\145\x6e\x20\162\145\x61\143\x68\145\144\x2c\40\x43\x50\125\72\40\x22\45\x73\40\x70\145\x72\x63\145\156\x74\42\54\40\114\151\155\x69\164\x3a\40\x22\45\x73\x20\160\x65\162\x63\x65\156\164\x22", round($totalCpuUtilization), round($cacheWarmerCpuLimit))); goto A6051; b63ba: if (!($totalCpuUtilization > $cacheWarmerCpuLimit)) { goto d1797; } goto Af3d6; A0b3a: $break = true; goto Cd588; f063b: $numberOfThreads = $this->varnishConfig->getNumberOfCacheWarmerThreads(); goto A85e0; Df222: C766b: goto D5df3; c501d: ef465: goto B0e43; E1de1: $this->lock(); goto Cd056; E6403: if (!($i == 1000)) { goto D1514; } goto A0b3a; Cf794: $this->urlQueueCollection->clear(); goto cca69; D2626: $totalCpuUtilization = $loadAverage[0] * 100 / $numberOfProcessingUnits; goto E49e1; Bc517: if (!(true === $isCacheWarmerCpuLimitEnabled)) { goto Edae8; } goto Fd617; D3cc8: $output->writeln("\103\x61\143\x68\x65\40\127\141\162\155\145\x72\x20\x69\x73\40\141\x6c\x72\x65\x61\144\x79\x20\x72\165\156\x6e\151\156\147"); goto A1a77; c81a3: E2a7c: goto Ff35e; ce195: if (false === $this->isLocked()) { goto De1f9; } goto D3cc8; B6cac: $this->urlQueueCollection->load(); goto E10b0; B0e43: Bc400: goto E6403; f391d: f5990: goto d14e7; Cd056: $this->deleteExpiredUrls(); goto a2a75; e24f0: $this->deleteFromQueue($urls); goto c501d; B19a2: if (!(false === $break)) { goto Bc400; } goto f063b; b4f85: $this->urlQueueCollection->addOrder("\x70\162\x69\x6f\162\x69\x74\x79"); goto B6cac; B1055: $loadAverage = sys_getloadavg(); goto D2626; A85e0: $i = $i + $numberOfThreads; goto Cf794; d14e7: $this->updateTimestamp(); goto A886c; E49e1: $totalCpuUtilization = min($totalCpuUtilization, 100); goto D2ddd; a2a75: $break = false; goto cf258; Af3d6: $break = true; goto c1777; A78d9: fad09: goto d5cf2; A6051: d1797: goto ffcc0; b78d6: $break = true; goto c7ffd; Cd588: D1514: goto D551f; c7ffd: goto ef465; goto c81a3; d5cf2: } catch (\Exception $e) { goto eff1e; d3bfd: $output->writeln(sprintf("\x3c\145\x72\x72\x6f\x72\x3e\45\163\x3c\57\145\x72\x72\x6f\162\x3e", $errorMessage)); goto Da225; eff1e: $errorMessage = $e->getMessage(); goto d3bfd; Da225: return \Magento\Framework\Console\Cli::RETURN_FAILURE; goto d7309; d7309: } } protected function updateTimestamp() { goto bbb03; bbb03: $now = new \DateTime("\156\157\x77", new \DateTimeZone("\x55\124\103")); goto Efff6; Efff6: $now = $now->getTimestamp(); goto B1396; B1396: $this->cache->save($now, self::CACHE_WARMER_CACHE_KEY); goto a5152; a5152: } public function crawlUrls(array $urls, OutputInterface $output) { try { goto C78c9; d704a: foreach ($urls as $url) { $output->writeln(sprintf("\74\x69\x6e\146\x6f\x3e\x22\45\x73\42\x20\143\x72\x61\x77\x6c\x65\x64\x3c\x2f\x69\x6e\x66\157\76", $url)); B58ea: } goto f42f4; f42f4: c01a3: goto fb83f; f04f2: $this->curlAdapter->multiRequest($urls, $options); goto d704a; C78c9: $options = array(CURLOPT_USERAGENT => self::USER_AGENT, CURLOPT_SSL_VERIFYPEER => 0); goto f04f2; fb83f: } catch (\Exception $e) { $errorMessage = sprintf("\x41\156\x20\145\x72\x72\x6f\162\40\157\143\x63\165\x72\162\x65\x64\40\144\x75\x72\x69\x6e\x67\40\143\x72\141\x77\x6c\151\x6e\147\x20\x75\162\154\163\x2c\40\145\162\x72\x6f\x72\x20\155\145\163\x73\141\147\x65\x3a\40\x25\163", $e->getMessage()); $this->logger->error($errorMessage); } } protected function deleteExpiredUrls() { try { $this->urlResource->deleteExpiredUrls(); } catch (\Exception $e) { $errorMessage = sprintf("\101\156\40\x65\162\x72\x6f\162\x20\157\143\x63\x75\x72\162\145\x64\40\144\x75\162\151\x6e\x67\40\x64\x65\154\145\x74\x69\156\147\40\145\x78\x70\151\x72\x65\144\40\x75\x72\154\163\x2c\x20\145\x72\x72\157\x72\40\x6d\x65\163\x73\x61\x67\x65\x3a\40\45\163", $e->getMessage()); $this->logger->error($errorMessage); } } public function deleteFromQueue(array $urls) { try { $urlIds = array_keys($urls); $this->urlQueueResource->deleteFromQueue($urlIds); } catch (\Exception $e) { $errorMessage = sprintf("\101\x6e\40\145\x72\162\x6f\162\40\157\x63\143\165\162\x72\145\x64\x20\x64\x75\162\x69\156\147\x20\x64\x65\x6c\x65\x74\151\156\x67\x20\165\x72\154\x73\x2c\x20\x65\x72\162\x6f\x72\x20\155\145\163\x73\141\x67\x65\x3a\40\x25\163", $e->getMessage()); $this->logger->error($errorMessage); } } protected function getLockFile() { goto A9f38; ff1a8: return $this->lockFile; goto fb491; c2e2c: dd5fe: goto f6c3d; E1d59: goto a410c; goto c2e2c; f6c3d: $this->lockFile = fopen($lockFile, "\167"); goto B7d8b; a569c: be232: goto ff1a8; a03d1: fwrite($this->lockFile, date("\x72")); goto a569c; ef3c4: if (is_file($lockFile)) { goto dd5fe; } goto Ec038; Ec038: $this->lockFile = fopen($lockFile, "\x78"); goto E1d59; A9f38: if (!(null === $this->lockFile)) { goto be232; } goto ab5d4; c8727: $filesystem->mkdir(dirname($lockFile)); goto ef3c4; ab5d4: $lockFileDirectory = $this->directoryList->getPath("\164\155\x70"); goto d33a3; B7d8b: a410c: goto a03d1; d33a3: $lockFile = sprintf("\x25\x73\57\155\147\164\x5f\166\x61\x72\x6e\151\x73\x68\137\x63\x61\143\x68\145\137\x63\x72\x61\167\154\x65\162\x2e\x6c\x6f\143\153", $lockFileDirectory); goto f2eee; f2eee: $filesystem = new Filesystem(); goto c8727; fb491: } protected function lock() { goto D52d4; Fc52f: return $this; goto f11a4; C87da: $lockFile = $this->getLockFile(); goto B24c2; D52d4: $this->isLocked = true; goto C87da; B24c2: flock($lockFile, LOCK_EX | LOCK_NB); goto Fc52f; f11a4: } protected function unlock() { goto Ef698; Be0bc: flock($lockFile, LOCK_UN); goto F26f5; Ef698: $this->isLocked = false; goto F773e; F773e: $lockFile = $this->getLockFile(); goto Be0bc; F26f5: return $this; goto b25e9; b25e9: } protected function isLocked() { goto B14b4; D6cb7: E9597: goto F0cf3; c3b90: return true; goto Bbf35; F7b8b: if (!flock($fp, LOCK_EX | LOCK_NB)) { goto a38bb; } goto b156b; Cfc17: return $this->isLocked; goto D6cb7; b156b: flock($fp, LOCK_UN); goto d95c5; B14b4: if ($this->isLocked !== null) { goto Daf83; } goto C6c28; C6c28: $fp = $this->getLockFile(); goto F7b8b; d95c5: return false; goto d65b6; Bbf35: goto E9597; goto Ada2a; d65b6: a38bb: goto c3b90; Ada2a: Daf83: goto Cfc17; F0cf3: } protected function runCommand($command, $timeout = 30) { goto ba8e6; a935a: if (!(false === $process->isSuccessful())) { goto d0ca4; } goto F7418; E4756: $process->setTimeout($timeout); goto Ed42b; Ed42b: $process->run(); goto a935a; A74d8: return $output; goto a9db7; F7418: throw new \RuntimeException($process->getErrorOutput()); goto c2b4e; d1b06: $output = trim($process->getOutput()); goto A74d8; ba8e6: $process = new Process($command); goto E4756; c2b4e: d0ca4: goto d1b06; a9db7: } public function __destruct() { $this->unlock(); } }
