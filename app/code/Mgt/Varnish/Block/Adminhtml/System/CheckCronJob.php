<?php
 namespace Mgt\Varnish\Block\Adminhtml\System; class CheckCronJob extends \Magento\Backend\Block\Template { const CACHE_WARMER_CACHE_KEY = "\115\x67\164\x43\141\x63\150\145\127\x61\x72\155\x65\x72"; const CRON_WARNING_MESSAGE_MINUTES = 10; protected $cache; protected $varnishConfig; protected $config; protected $directoryList; public function __construct(\Magento\Backend\Block\Template\Context $context, \Magento\Framework\App\Filesystem\DirectoryList $directoryList, \Mgt\Varnish\Model\Cache\Backend\File $cache, \Magento\Framework\App\Config $config, \Mgt\Varnish\Model\Cache\Config $varnishConfig, array $data = []) { goto b1048; b1048: parent::__construct($context, $data); goto cbb2a; D6e8b: $this->varnishConfig = $varnishConfig; goto Ab1e9; Eb048: $this->config = $config; goto D6e8b; b881a: $this->cache = $cache; goto Eb048; cbb2a: $this->directoryList = $directoryList; goto b881a; Ab1e9: } public function isVarnishEnabled() { $isVarnishEnabled = $this->varnishConfig->isEnabled(); return $isVarnishEnabled; } public function isCacheWarmerEnabled() { $isCacheWarmerEnabled = $this->varnishConfig->isCacheWarmerEnabled(); return $isCacheWarmerEnabled; } public function showCronNotRunningMessage() { goto E5586; Dbeab: $showCronNotRunningMessage = true; goto Aceb3; F6312: $now = new \DateTime("\x6e\x6f\167", new \DateTimeZone("\125\124\x43")); goto C5c58; D3e7e: $dateDiff = $now->diff($lastRunning); goto c824c; A9cbc: if (!(true === $isVarnishEnabled && true === $isCacheWarmerEnabled)) { goto e0b9f; } goto E4ba1; c3334: if (0 == $lastRunningTimestamp) { goto f4e2a; } goto F6312; F14d1: $totalMinutes += $dateDiff->i; goto D6e63; a0a4b: e0b9f: goto C4102; E5586: $showCronNotRunningMessage = false; goto b7b33; b7b33: $isVarnishEnabled = $this->isVarnishEnabled(); goto C3e05; C4102: return $showCronNotRunningMessage; goto e1063; Aceb3: f4e5e: goto aa51c; D6e63: if (!($totalMinutes >= self::CRON_WARNING_MESSAGE_MINUTES)) { goto f4e5e; } goto Dbeab; D3ed7: $lastRunning->setTimestamp($lastRunningTimestamp); goto D3e7e; c824c: $totalMinutes = $dateDiff->days * 24 * 60; goto f1e99; f1e99: $totalMinutes += $dateDiff->h * 60; goto F14d1; aa51c: goto F09ef; goto b7b92; E4ba1: $lastRunningTimestamp = $this->getLastRunningTimestamp(); goto c3334; d6c91: $showCronNotRunningMessage = true; goto C1242; b7b92: f4e2a: goto d6c91; C5c58: $lastRunning = new \Datetime(); goto Cf19c; C3e05: $isCacheWarmerEnabled = $this->isCacheWarmerEnabled(); goto A9cbc; C1242: F09ef: goto a0a4b; Cf19c: $lastRunning->setTimezone(new \DateTimeZone("\125\x54\x43")); goto D3ed7; e1063: } protected function getLastRunningTimestamp() { $lastRunningTimestamp = (int) $this->cache->load(self::CACHE_WARMER_CACHE_KEY); return $lastRunningTimestamp; } public function getCronJobCommand() { $cronJobCommand = sprintf("\160\150\x70\x20\x25\x73\57\142\151\x6e\57\x6d\141\x67\x65\156\x74\x6f\40\155\147\164\x2d\166\x61\162\156\x69\x73\x68\72\x63\x61\x63\150\145\x2d\167\x61\x72\155\x65\162", $this->directoryList->getRoot()); return $cronJobCommand; } }
