<?php
 namespace Mgt\Varnish\Model\Cache; class Config { protected $config; protected $deploymentConfigWriter; protected $deploymentConfigReader; protected $configFactory; protected $storeManager; public function __construct(\Magento\Framework\App\DeploymentConfig\Writer $deploymentConfigWriter, \Magento\Framework\App\DeploymentConfig\Reader $deploymentConfigReader, \Magento\Framework\App\Config $config, \Magento\Config\Model\Config\Factory $configFactory, \Magento\Store\Model\StoreManagerInterface $storeManager) { goto c3e3f; be239: $this->storeManager = $storeManager; goto c1e1a; c3e3f: $this->deploymentConfigWriter = $deploymentConfigWriter; goto e4387; bfff6: $this->configFactory = $configFactory; goto be239; f264a: $this->config = $config; goto bfff6; e4387: $this->deploymentConfigReader = $deploymentConfigReader; goto f264a; c1e1a: } public function isEnabled($store = null) { $isEnabled = (bool) $this->getConfigValue("\155\x67\164\137\x76\x61\x72\x6e\151\x73\x68\x2f\x6d\x6f\144\x75\x6c\x65\x2f\151\x73\x5f\145\x6e\x61\x62\x6c\145\x64", $store); return $isEnabled; } public function getServerList($store = null) { $serverList = array_map("\x74\162\x69\155", explode("\54", $this->getConfigValue("\x6d\x67\x74\137\x76\x61\162\156\x69\163\x68\57\x6d\157\144\165\154\145\57\163\x65\x72\166\x65\x72\x5f\154\x69\163\164", $store))); return $serverList; } public function getExcludedRoutes($store = null) { $excludedRoutes = explode("\xa", trim($this->getConfigValue("\155\x67\164\137\166\x61\162\x6e\x69\x73\150\57\x6d\157\x64\165\x6c\145\x2f\145\170\143\154\x75\x64\x65\x64\137\x72\157\165\164\x65\x73", $store))); return $excludedRoutes; } public function getExcludedUrls($store = null) { $excludedUrls = explode("\xa", trim($this->getConfigValue("\155\147\x74\137\x76\x61\162\x6e\151\x73\150\x2f\x6d\157\x64\x75\154\x65\57\x65\170\143\x6c\165\144\x65\144\x5f\165\x72\154\163", $store))); return $excludedUrls; } public function getExcludedParams($store = null) { $excludedParams = array_map("\x74\162\x69\x6d", explode("\54", $this->getConfigValue("\x6d\x67\164\137\166\x61\162\156\151\163\x68\x2f\x6d\x6f\x64\165\154\x65\x2f\x65\170\x63\x6c\x75\144\145\144\137\160\x61\x72\141\x6d\x73", $store))); return $excludedParams; } public function getDefaultCacheLifetime($store = null) { $defaultCacheLifetime = (int) $this->getConfigValue("\155\147\x74\x5f\166\x61\162\x6e\x69\163\150\57\155\x6f\144\165\x6c\x65\x2f\x64\x65\x66\x61\165\x6c\x74\137\x63\141\143\150\x65\137\x6c\151\x66\x65\x74\151\155\x65", $store); return $defaultCacheLifetime; } public function isDebugModeEnabled($store = null) { $isDebugModeEnabled = (bool) $this->getConfigValue("\155\x67\164\137\166\141\162\156\x69\x73\150\57\x6d\x6f\x64\x75\x6c\x65\57\144\x65\142\165\x67\137\x6d\157\x64\x65", $store); return $isDebugModeEnabled; } public function getApiSecretKey($store = null) { $apiSecretKey = trim($this->getConfigValue("\155\147\164\137\166\x61\x72\x6e\x69\x73\150\x2f\155\157\x64\165\x6c\145\x2f\141\x70\151\137\x73\x65\x63\x72\145\164\137\x6b\x65\171", $store)); return $apiSecretKey; } public function getRoutesCacheLifetime($store = null) { goto A4ba7; Dfa6b: $routesCacheLifetime = json_decode($routesCacheLifetime, true); goto D73bc; d23c8: return $routesCacheLifetime; goto a1033; D73bc: $routesCacheLifetime = (array) $routesCacheLifetime; goto d23c8; A4ba7: $routesCacheLifetime = trim($this->getConfigValue("\x6d\147\164\137\166\x61\x72\156\x69\x73\x68\57\155\x6f\144\x75\154\x65\57\162\x6f\165\164\x65\163\x5f\x63\141\x63\x68\x65\137\154\x69\146\145\164\x69\155\x65", $store)); goto Dfa6b; a1033: } public function isCacheWarmerEnabled($store = null) { $isCacheWarmerEnabled = (bool) $this->getConfigValue("\x6d\147\164\137\x76\141\162\156\151\x73\x68\x2f\155\157\144\x75\x6c\x65\57\x63\141\143\x68\x65\x5f\167\141\x72\x6d\x65\x72\137\145\156\141\x62\154\145\144", $store); return $isCacheWarmerEnabled; } public function getCacheWarmerRoutes($store = null) { $cacheWarmerRoutes = array_map("\164\162\151\155", explode("\12", trim($this->getConfigValue("\155\147\164\137\x76\141\162\156\151\x73\150\x2f\x6d\157\x64\165\154\145\57\143\x61\x63\150\x65\x5f\167\141\x72\155\145\162\137\x72\157\165\x74\145\x73", $store)))); return $cacheWarmerRoutes; } public function getNumberOfCacheWarmerThreads($store = null) { $numberOfCacheWarmerThreads = (int) $this->getConfigValue("\155\x67\164\x5f\x76\x61\x72\x6e\151\x73\150\x2f\155\157\144\x75\x6c\x65\x2f\x63\141\x63\150\x65\x5f\x77\141\x72\155\x65\x72\x5f\164\150\x72\x65\x61\144\163", $store); return $numberOfCacheWarmerThreads; } public function getCacheWarmerCpuLimit($store = null) { $cacheWarmerCpuLimit = (int) $this->getConfigValue("\x6d\x67\x74\x5f\166\x61\162\x6e\151\x73\150\x2f\155\x6f\144\165\154\x65\x2f\143\x61\143\150\145\x5f\x77\141\162\x6d\145\162\x5f\x63\160\165\137\154\x69\155\151\164", $store); return $cacheWarmerCpuLimit; } public function isCacheWarmerCpuLimitEnabled($store = null) { $isCacheWarmerCpuLimitEnabled = (bool) $this->getConfigValue("\x6d\147\x74\137\166\x61\162\156\151\163\x68\57\x6d\x6f\x64\x75\x6c\x65\x2f\x63\141\143\x68\x65\x5f\167\141\162\x6d\x65\162\137\x63\x70\165\137\x6c\151\155\151\x74\137\x65\156\x61\142\154\145\144", $store); return $isCacheWarmerCpuLimitEnabled; } protected function getConfigValue($path, $store = null, $scope = \Magento\Store\Model\ScopeInterface::SCOPE_STORE) { goto a2ce1; e4330: return $configValue; goto E0de0; C46e7: $configValue = $this->config->getValue($path, $scope, $store); goto e4330; Fcd6f: $store = $this->storeManager->getStore(); goto f2f31; f2f31: D8552: goto C46e7; a2ce1: if (!(null === $store)) { goto D8552; } goto Fcd6f; E0de0: } }
