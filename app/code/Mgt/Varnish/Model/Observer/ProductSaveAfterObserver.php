<?php
 namespace Mgt\Varnish\Model\Observer; use Magento\Framework\Event\ObserverInterface; class ProductSaveAfterObserver implements ObserverInterface { protected $config; protected $productUrlRewriteGenerator; protected $catalogProductTypeConfigurable; protected $productFactory; protected $varnishConfig; protected $urlQueue; protected static $isQueued = false; public function __construct(\Magento\PageCache\Model\Config $config, \Magento\CatalogUrlRewrite\Model\ProductUrlRewriteGenerator $productUrlRewriteGenerator, \Magento\ConfigurableProduct\Model\ResourceModel\Product\Type\Configurable $catalogProductTypeConfigurable, \Magento\Catalog\Model\ProductFactory $productFactory, \Mgt\Varnish\Model\UrlQueue $urlQueue, \Mgt\Varnish\Model\Cache\Config $varnishConfig) { goto Ce373; d6e78: $this->productFactory = $productFactory; goto cf1d7; cf1d7: $this->urlQueue = $urlQueue; goto D2ddb; Ce373: $this->config = $config; goto ecf9d; C32cc: $this->catalogProductTypeConfigurable = $catalogProductTypeConfigurable; goto d6e78; D2ddb: $this->varnishConfig = $varnishConfig; goto f1b12; ecf9d: $this->productUrlRewriteGenerator = $productUrlRewriteGenerator; goto C32cc; f1b12: } public function execute(\Magento\Framework\Event\Observer $observer) { goto b0db6; d5681: f8bb1: goto c2890; d8950: $urls = []; goto D7b6a; F8a08: foreach ($productUrls as $url) { $urls[] = ["\x73\164\157\162\x65\137\151\x64" => $url->getStoreId(), "\x70\x61\164\150" => $url->getRequestPath(), "\x70\162\151\157\x72\151\164\x79" => \Mgt\Varnish\Model\UrlQueue::PRIORITY_HIGH]; e94b3: } goto f91c7; A531a: try { $this->urlQueue->addToQueue($urls); } catch (\Exception $e) { } goto E81bd; bff59: if (!count($parentProductIds)) { goto f8bb1; } goto ab42c; b523c: e1bff: goto d5681; E66ca: Cc69c: goto E080f; b0db6: $product = $observer->getEvent()->getProduct(); goto e66a4; e6e9d: $parentProductIds = $this->catalogProductTypeConfigurable->getParentIdsByChild($productId); goto bff59; E81bd: c76cd: goto E66ca; dc242: c50f2: goto A7151; ab42c: foreach ($parentProductIds as $parentProductId) { goto Bfcca; Bfcca: $product = $this->productFactory->create(); goto B33a9; dbf88: $productUrls = $this->productUrlRewriteGenerator->generate($product); goto e8d8c; ae6c2: Bd76b: goto f2b7c; e8d8c: foreach ($productUrls as $url) { $urls[] = ["\163\164\157\162\x65\x5f\151\144" => $url->getStoreId(), "\160\141\x74\150" => $url->getRequestPath(), "\x70\162\x69\157\162\151\164\x79" => \Mgt\Varnish\Model\UrlQueue::PRIORITY_HIGH]; e3c53: } goto ae6c2; B33a9: $product->load($parentProductId); goto dbf88; f2b7c: a80a3: goto ee962; ee962: } goto b523c; A7151: if (!count($urls)) { goto c76cd; } goto A531a; C2e9a: $productUrls = $this->productUrlRewriteGenerator->generate($product); goto d8950; D7b6a: if (false === empty($productUrls)) { goto Ae32a; } goto ba4d8; f91c7: D9d40: goto dc242; ba4d8: $productId = $product->getId(); goto e6e9d; e66a4: $isCacheWarmerEnabled = $this->varnishConfig->isCacheWarmerEnabled(); goto b0ad9; b0ad9: if (!(true === $isCacheWarmerEnabled && isset($product) && $product instanceof \Magento\Catalog\Model\Product)) { goto Cc69c; } goto C2e9a; c2890: goto c50f2; goto d26da; d26da: Ae32a: goto F8a08; E080f: } }
