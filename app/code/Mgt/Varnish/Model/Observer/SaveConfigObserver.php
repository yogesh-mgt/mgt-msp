<?php
 namespace Mgt\Varnish\Model\Observer; use Magento\Framework\Event\ObserverInterface; use Magento\Framework\Event\Observer; class SaveConfigObserver implements ObserverInterface { const FULL_PAGE_CACHE_STATUS_ENABLED = 1; const FULL_PAGE_CACHE_STATUS_DISABLED = 0; protected $config; protected $deploymentConfigWriter; protected $configValueFactory; protected $cachePurger; protected $cacheTypeList; public function __construct(\Mgt\Varnish\Model\Cache\Config $config, \Magento\Framework\App\DeploymentConfig\Writer $deploymentConfigWriter, \Magento\Framework\App\Config\ValueFactory $configValueFactory, \Magento\CacheInvalidate\Model\PurgeCache $cachePurger, \Magento\Framework\App\Cache\TypeListInterface $cacheTypeList) { goto eda3c; E7ba2: $this->deploymentConfigWriter = $deploymentConfigWriter; goto fb1b8; B4335: $this->cachePurger = $cachePurger; goto Bbb4d; eda3c: $this->config = $config; goto E7ba2; fb1b8: $this->configValueFactory = $configValueFactory; goto B4335; Bbb4d: $this->cacheTypeList = $cacheTypeList; goto b0de1; b0de1: } public function execute(Observer $observer) { $isVarnishEnabled = $this->config->isEnabled(); try { goto Cf14f; a2b96: aa9fd: goto Fae46; f443e: goto C30b3; goto f8f50; F3330: $cacheTypes["\146\165\x6c\x6c\137\160\x61\147\145"]->setStatus(self::FULL_PAGE_CACHE_STATUS_ENABLED); goto e2c27; d432d: $configValue->delete(); goto a2b96; Bd1b4: if (true === $isVarnishEnabled) { goto Ed037; } goto c49b5; C2a5e: $configValue->setValue(\Magento\PageCache\Model\Config::VARNISH); goto Dbf01; f5ac7: f3af6: goto a1fed; Dbf01: $configValue->save(); goto C0dbb; d4819: b40f5: goto f5ac7; C2d2e: if (!$cacheTypes) { goto f3af6; } goto Ba490; fd4d8: $cacheTypes = $this->cacheTypeList->getTypes(); goto Bd1b4; bba16: $configValue->load(\Magento\PageCache\Model\Config::XML_PAGECACHE_TYPE, "\160\141\164\150"); goto fd4d8; Ba490: foreach ($cacheTypes as $cacheTypeKey => $cacheType) { $appEnvDataCacheTypes["\141\x70\160\137\145\x6e\x76"]["\143\x61\x63\x68\145\137\x74\171\160\x65\x73"][$cacheTypeKey] = (int) $cacheType->getStatus(); bec35: } goto d4819; c49b5: if (!$configValue->getId()) { goto aa9fd; } goto d432d; e2c27: Ede3c: goto f16dc; a1fed: $this->deploymentConfigWriter->saveConfig($appEnvDataCacheTypes, true); goto f1440; Cf14f: $configValue = $this->configValueFactory->create(); goto bba16; C0dbb: if (!isset($cacheTypes["\146\x75\154\154\x5f\160\x61\x67\145"])) { goto Ede3c; } goto F3330; d199d: $configValue->setPath(\Magento\PageCache\Model\Config::XML_PAGECACHE_TYPE); goto C2a5e; f8f50: Ed037: goto d199d; B0658: ce6b7: goto c6272; a2a85: $appEnvDataCacheTypes = []; goto C2d2e; Ddad3: $cacheTypes["\x66\165\x6c\154\137\x70\141\x67\x65"]->setStatus(self::FULL_PAGE_CACHE_STATUS_DISABLED); goto B0658; f16dc: C30b3: goto a2a85; c6272: $this->cachePurger->sendPurgeRequest("\x2a"); goto f443e; Fae46: if (!isset($cacheTypes["\x66\165\x6c\x6c\x5f\x70\x61\147\x65"])) { goto ce6b7; } goto Ddad3; f1440: } catch (\Exception $e) { throw new $e(); } } }
